apiVersion: apps/v1
kind: StatefulSet
metadata:
  # This name uniquely identifies the StatefulSet
  name: minio
spec:
  serviceName: minio
  replicas: 1
  selector:
    matchLabels:
      app: minio # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: minio # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: minio
        envFrom:
          - secretRef:
              name: minio-secret
        image: quay.io/minio/minio:RELEASE.2024-03-21T23-13-43Z
        command:
        - /bin/bash
        - -c
        args:
        - minio server /backups --console-address :9001
        ports:
        - name: api
          containerPort: 9000
        - name: console
          containerPort: 9001
        # These volume mounts are persistent. Each pod in the PetSet
        # gets a volume mounted based on this field.
        volumeMounts:
        - name: backups
          mountPath: /backups
        # Liveness probe detects situations where MinIO server instance
        # is not working properly and needs restart. Kubernetes automatically
        # restarts the pods if liveness checks fail.
        #livenessProbe:
          #httpGet:
            #path: /minio/health/live
            #port: 9000
          #initialDelaySeconds: 120
          #periodSeconds: 20
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above. 
  volumeClaimTemplates:
  - metadata:
      name: backups
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
